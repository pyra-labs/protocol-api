apiVersion: apps/v1
kind: Deployment
metadata:
  name: protocol-api
  namespace: staging
  labels:
    env: staging
spec:
  selector:
    matchLabels:
      app: protocol-api
  template:
    metadata:
      name: protocol-api
      labels:
        env: staging
        app: protocol-api
        ingress: public
    spec:
      containers:
        - image: LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG-staging
          name: api
          env:
            - name: GOOGLE_CLOUD_PROJECT
              value: festive-cirrus-452916-c1
            - name: RPC_URLS
              valueFrom:
                secretKeyRef:
                  name: rpc-urls
                  key: key
            - name: PORT
              value: "8080"
            - name: EMAIL_TO
              value: iarla@pyra.fi,diego@pyra.fi
            - name: EMAIL_FROM
              value: diego@pyra.fi
            - name: EMAIL_HOST
              value: smtp-relay.brevo.com
            - name: EMAIL_PORT
              value: "587"
            - name: EMAIL_USER
              value: 77aaea001@smtp-brevo.com
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: email-password
                  key: key
            - name: BREVO_API_KEY
              valueFrom:
                secretKeyRef:
                  name: brevo-api-key
                  key: key
            - name: FLASH_LOAN_CALLER
              valueFrom:
                secretKeyRef:
                  name: flash-loan-caller
                  key: key
            - name: INTERNAL_API_URL
              value: https://api.pyra.fi/card/
            - name: ROUTE_PREFIX
              value: /v1
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
          ports:
            - containerPort: 8080
              name: http
          securityContext:
            runAsUser: 1005
            runAsNonRoot: true
---
apiVersion: v1
kind: Service
metadata:
  name: protocol-api
  namespace: staging
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default":"protocol-api-backend-config"}'
spec:
  selector:
    app: protocol-api
    env: staging
  ports:
    - port: 8080
      targetPort: 8080
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: protocol-api-backend-config
  namespace: staging
spec:
  healthCheck:
    type: HTTP
    requestPath: /v1/
    port: 8080
    checkIntervalSec: 30
    timeoutSec: 10
    healthyThreshold: 2
    unhealthyThreshold: 3
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: protocol-api
  namespace: staging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: protocol-api
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
